# 按“位与”运算(&)      按“位或”运算(|)
print('按位与运算:',12&8) # 12是1100 ，8是1000 ，按位与运算后为1000，即8
print('按位或运算:',12|8) # 1100 ，或运算，有1就是1

# 按“位异或”运算(^)     按“位取反”运算(~)
print('按位异或运算:',31^22)
print('按位取反:',~12) # 0000 1100 -> 1111 0011 -> 1000 1100 -> 1000 1101 输出-13                  规律~x = -x-1

# 左移位，右边补零，左边溢出位则丢弃
print('左移位:',2<<2) # 8,表示的是2向左移位两位  2* 2*2  (2*2^2)
print('左移位:',2<<3) # 相当于 2* 2*2*2   (2*2^3)                                           左乘
print('左移位:',3<<4) # (3*2^4)

# 右移位，右边溢出位丢弃，左边分情况，如果原来高位是1则补1，如果原来高位是0则补0
print('右移位:',8>>2) # 8向右移动两位相当于 8//2，4//2                                         右除
print('右移位:',-8>>2) # -8//2，-4//2

